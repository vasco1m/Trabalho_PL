Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Commands
Rule 1     Commands -> Commands Command
Rule 2     Commands -> Command
Rule 3     Command -> Indents str
Rule 4     Command -> Indents ppoint
Rule 5     Command -> Indents input Atribs fp
Rule 6     Command -> Indents const str equal apR LqStr fpR
Rule 7     Command -> Indents str STR
Rule 8     Command -> Indents str hash str STR
Rule 9     Command -> doctype str
Rule 10    LqStr -> LqStr comma qStr
Rule 11    LqStr -> qStr
Rule 12    Atribs -> Atribs Atrib
Rule 13    Atribs -> Atrib
Rule 14    Atrib -> str equal qStr
Rule 15    STR -> STR str
Rule 16    STR -> dSign str dSign
Rule 17    STR -> str
Rule 18    Indents -> Indents Indent
Rule 19    Indents -> <empty>
Rule 20    Indent -> tab

Terminals, with rules where they appear

apR                  : 6
comma                : 10
const                : 6
dSign                : 16 16
doctype              : 9
equal                : 6 14
error                : 
fp                   : 5
fpR                  : 6
hash                 : 8
input                : 5
ppoint               : 4
qStr                 : 10 11 14
str                  : 3 6 7 8 8 9 14 15 16 17
tab                  : 20

Nonterminals, with rules where they appear

Atrib                : 12 13
Atribs               : 5 12
Command              : 1 2
Commands             : 1 0
Indent               : 18
Indents              : 3 4 5 6 7 8 18
LqStr                : 6 10
STR                  : 7 8 15

Parsing method: LALR

state 0

    (0) S' -> . Commands
    (1) Commands -> . Commands Command
    (2) Commands -> . Command
    (3) Command -> . Indents str
    (4) Command -> . Indents ppoint
    (5) Command -> . Indents input Atribs fp
    (6) Command -> . Indents const str equal apR LqStr fpR
    (7) Command -> . Indents str STR
    (8) Command -> . Indents str hash str STR
    (9) Command -> . doctype str
    (18) Indents -> . Indents Indent
    (19) Indents -> .

    doctype         shift and go to state 4
    str             reduce using rule 19 (Indents -> .)
    ppoint          reduce using rule 19 (Indents -> .)
    input           reduce using rule 19 (Indents -> .)
    const           reduce using rule 19 (Indents -> .)
    tab             reduce using rule 19 (Indents -> .)

    Commands                       shift and go to state 1
    Command                        shift and go to state 2
    Indents                        shift and go to state 3

state 1

    (0) S' -> Commands .
    (1) Commands -> Commands . Command
    (3) Command -> . Indents str
    (4) Command -> . Indents ppoint
    (5) Command -> . Indents input Atribs fp
    (6) Command -> . Indents const str equal apR LqStr fpR
    (7) Command -> . Indents str STR
    (8) Command -> . Indents str hash str STR
    (9) Command -> . doctype str
    (18) Indents -> . Indents Indent
    (19) Indents -> .

    doctype         shift and go to state 4
    str             reduce using rule 19 (Indents -> .)
    ppoint          reduce using rule 19 (Indents -> .)
    input           reduce using rule 19 (Indents -> .)
    const           reduce using rule 19 (Indents -> .)
    tab             reduce using rule 19 (Indents -> .)

    Command                        shift and go to state 5
    Indents                        shift and go to state 3

state 2

    (2) Commands -> Command .

    doctype         reduce using rule 2 (Commands -> Command .)
    $end            reduce using rule 2 (Commands -> Command .)
    str             reduce using rule 2 (Commands -> Command .)
    ppoint          reduce using rule 2 (Commands -> Command .)
    input           reduce using rule 2 (Commands -> Command .)
    const           reduce using rule 2 (Commands -> Command .)
    tab             reduce using rule 2 (Commands -> Command .)


state 3

    (3) Command -> Indents . str
    (4) Command -> Indents . ppoint
    (5) Command -> Indents . input Atribs fp
    (6) Command -> Indents . const str equal apR LqStr fpR
    (7) Command -> Indents . str STR
    (8) Command -> Indents . str hash str STR
    (18) Indents -> Indents . Indent
    (20) Indent -> . tab

    str             shift and go to state 6
    ppoint          shift and go to state 7
    input           shift and go to state 8
    const           shift and go to state 9
    tab             shift and go to state 11

    Indent                         shift and go to state 10

state 4

    (9) Command -> doctype . str

    str             shift and go to state 12


state 5

    (1) Commands -> Commands Command .

    doctype         reduce using rule 1 (Commands -> Commands Command .)
    $end            reduce using rule 1 (Commands -> Commands Command .)
    str             reduce using rule 1 (Commands -> Commands Command .)
    ppoint          reduce using rule 1 (Commands -> Commands Command .)
    input           reduce using rule 1 (Commands -> Commands Command .)
    const           reduce using rule 1 (Commands -> Commands Command .)
    tab             reduce using rule 1 (Commands -> Commands Command .)


state 6

    (3) Command -> Indents str .
    (7) Command -> Indents str . STR
    (8) Command -> Indents str . hash str STR
    (15) STR -> . STR str
    (16) STR -> . dSign str dSign
    (17) STR -> . str

  ! shift/reduce conflict for str resolved as shift
    doctype         reduce using rule 3 (Command -> Indents str .)
    $end            reduce using rule 3 (Command -> Indents str .)
    ppoint          reduce using rule 3 (Command -> Indents str .)
    input           reduce using rule 3 (Command -> Indents str .)
    const           reduce using rule 3 (Command -> Indents str .)
    tab             reduce using rule 3 (Command -> Indents str .)
    hash            shift and go to state 15
    dSign           shift and go to state 16
    str             shift and go to state 13

  ! str             [ reduce using rule 3 (Command -> Indents str .) ]

    STR                            shift and go to state 14

state 7

    (4) Command -> Indents ppoint .

    doctype         reduce using rule 4 (Command -> Indents ppoint .)
    $end            reduce using rule 4 (Command -> Indents ppoint .)
    str             reduce using rule 4 (Command -> Indents ppoint .)
    ppoint          reduce using rule 4 (Command -> Indents ppoint .)
    input           reduce using rule 4 (Command -> Indents ppoint .)
    const           reduce using rule 4 (Command -> Indents ppoint .)
    tab             reduce using rule 4 (Command -> Indents ppoint .)


state 8

    (5) Command -> Indents input . Atribs fp
    (12) Atribs -> . Atribs Atrib
    (13) Atribs -> . Atrib
    (14) Atrib -> . str equal qStr

    str             shift and go to state 19

    Atribs                         shift and go to state 17
    Atrib                          shift and go to state 18

state 9

    (6) Command -> Indents const . str equal apR LqStr fpR

    str             shift and go to state 20


state 10

    (18) Indents -> Indents Indent .

    str             reduce using rule 18 (Indents -> Indents Indent .)
    ppoint          reduce using rule 18 (Indents -> Indents Indent .)
    input           reduce using rule 18 (Indents -> Indents Indent .)
    const           reduce using rule 18 (Indents -> Indents Indent .)
    tab             reduce using rule 18 (Indents -> Indents Indent .)


state 11

    (20) Indent -> tab .

    str             reduce using rule 20 (Indent -> tab .)
    ppoint          reduce using rule 20 (Indent -> tab .)
    input           reduce using rule 20 (Indent -> tab .)
    const           reduce using rule 20 (Indent -> tab .)
    tab             reduce using rule 20 (Indent -> tab .)


state 12

    (9) Command -> doctype str .

    doctype         reduce using rule 9 (Command -> doctype str .)
    $end            reduce using rule 9 (Command -> doctype str .)
    str             reduce using rule 9 (Command -> doctype str .)
    ppoint          reduce using rule 9 (Command -> doctype str .)
    input           reduce using rule 9 (Command -> doctype str .)
    const           reduce using rule 9 (Command -> doctype str .)
    tab             reduce using rule 9 (Command -> doctype str .)


state 13

    (17) STR -> str .

    str             reduce using rule 17 (STR -> str .)
    doctype         reduce using rule 17 (STR -> str .)
    $end            reduce using rule 17 (STR -> str .)
    ppoint          reduce using rule 17 (STR -> str .)
    input           reduce using rule 17 (STR -> str .)
    const           reduce using rule 17 (STR -> str .)
    tab             reduce using rule 17 (STR -> str .)


state 14

    (7) Command -> Indents str STR .
    (15) STR -> STR . str

  ! shift/reduce conflict for str resolved as shift
    doctype         reduce using rule 7 (Command -> Indents str STR .)
    $end            reduce using rule 7 (Command -> Indents str STR .)
    ppoint          reduce using rule 7 (Command -> Indents str STR .)
    input           reduce using rule 7 (Command -> Indents str STR .)
    const           reduce using rule 7 (Command -> Indents str STR .)
    tab             reduce using rule 7 (Command -> Indents str STR .)
    str             shift and go to state 21

  ! str             [ reduce using rule 7 (Command -> Indents str STR .) ]


state 15

    (8) Command -> Indents str hash . str STR

    str             shift and go to state 22


state 16

    (16) STR -> dSign . str dSign

    str             shift and go to state 23


state 17

    (5) Command -> Indents input Atribs . fp
    (12) Atribs -> Atribs . Atrib
    (14) Atrib -> . str equal qStr

    fp              shift and go to state 24
    str             shift and go to state 19

    Atrib                          shift and go to state 25

state 18

    (13) Atribs -> Atrib .

    fp              reduce using rule 13 (Atribs -> Atrib .)
    str             reduce using rule 13 (Atribs -> Atrib .)


state 19

    (14) Atrib -> str . equal qStr

    equal           shift and go to state 26


state 20

    (6) Command -> Indents const str . equal apR LqStr fpR

    equal           shift and go to state 27


state 21

    (15) STR -> STR str .

    str             reduce using rule 15 (STR -> STR str .)
    doctype         reduce using rule 15 (STR -> STR str .)
    $end            reduce using rule 15 (STR -> STR str .)
    ppoint          reduce using rule 15 (STR -> STR str .)
    input           reduce using rule 15 (STR -> STR str .)
    const           reduce using rule 15 (STR -> STR str .)
    tab             reduce using rule 15 (STR -> STR str .)


state 22

    (8) Command -> Indents str hash str . STR
    (15) STR -> . STR str
    (16) STR -> . dSign str dSign
    (17) STR -> . str

    dSign           shift and go to state 16
    str             shift and go to state 13

    STR                            shift and go to state 28

state 23

    (16) STR -> dSign str . dSign

    dSign           shift and go to state 29


state 24

    (5) Command -> Indents input Atribs fp .

    doctype         reduce using rule 5 (Command -> Indents input Atribs fp .)
    $end            reduce using rule 5 (Command -> Indents input Atribs fp .)
    str             reduce using rule 5 (Command -> Indents input Atribs fp .)
    ppoint          reduce using rule 5 (Command -> Indents input Atribs fp .)
    input           reduce using rule 5 (Command -> Indents input Atribs fp .)
    const           reduce using rule 5 (Command -> Indents input Atribs fp .)
    tab             reduce using rule 5 (Command -> Indents input Atribs fp .)


state 25

    (12) Atribs -> Atribs Atrib .

    fp              reduce using rule 12 (Atribs -> Atribs Atrib .)
    str             reduce using rule 12 (Atribs -> Atribs Atrib .)


state 26

    (14) Atrib -> str equal . qStr

    qStr            shift and go to state 30


state 27

    (6) Command -> Indents const str equal . apR LqStr fpR

    apR             shift and go to state 31


state 28

    (8) Command -> Indents str hash str STR .
    (15) STR -> STR . str

  ! shift/reduce conflict for str resolved as shift
    doctype         reduce using rule 8 (Command -> Indents str hash str STR .)
    $end            reduce using rule 8 (Command -> Indents str hash str STR .)
    ppoint          reduce using rule 8 (Command -> Indents str hash str STR .)
    input           reduce using rule 8 (Command -> Indents str hash str STR .)
    const           reduce using rule 8 (Command -> Indents str hash str STR .)
    tab             reduce using rule 8 (Command -> Indents str hash str STR .)
    str             shift and go to state 21

  ! str             [ reduce using rule 8 (Command -> Indents str hash str STR .) ]


state 29

    (16) STR -> dSign str dSign .

    str             reduce using rule 16 (STR -> dSign str dSign .)
    doctype         reduce using rule 16 (STR -> dSign str dSign .)
    $end            reduce using rule 16 (STR -> dSign str dSign .)
    ppoint          reduce using rule 16 (STR -> dSign str dSign .)
    input           reduce using rule 16 (STR -> dSign str dSign .)
    const           reduce using rule 16 (STR -> dSign str dSign .)
    tab             reduce using rule 16 (STR -> dSign str dSign .)


state 30

    (14) Atrib -> str equal qStr .

    fp              reduce using rule 14 (Atrib -> str equal qStr .)
    str             reduce using rule 14 (Atrib -> str equal qStr .)


state 31

    (6) Command -> Indents const str equal apR . LqStr fpR
    (10) LqStr -> . LqStr comma qStr
    (11) LqStr -> . qStr

    qStr            shift and go to state 33

    LqStr                          shift and go to state 32

state 32

    (6) Command -> Indents const str equal apR LqStr . fpR
    (10) LqStr -> LqStr . comma qStr

    fpR             shift and go to state 34
    comma           shift and go to state 35


state 33

    (11) LqStr -> qStr .

    fpR             reduce using rule 11 (LqStr -> qStr .)
    comma           reduce using rule 11 (LqStr -> qStr .)


state 34

    (6) Command -> Indents const str equal apR LqStr fpR .

    doctype         reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)
    $end            reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)
    str             reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)
    ppoint          reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)
    input           reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)
    const           reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)
    tab             reduce using rule 6 (Command -> Indents const str equal apR LqStr fpR .)


state 35

    (10) LqStr -> LqStr comma . qStr

    qStr            shift and go to state 36


state 36

    (10) LqStr -> LqStr comma qStr .

    fpR             reduce using rule 10 (LqStr -> LqStr comma qStr .)
    comma           reduce using rule 10 (LqStr -> LqStr comma qStr .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for str in state 6 resolved as shift
WARNING: shift/reduce conflict for str in state 14 resolved as shift
WARNING: shift/reduce conflict for str in state 28 resolved as shift
